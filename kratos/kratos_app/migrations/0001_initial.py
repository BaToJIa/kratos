# Generated by Django 4.1.3 on 2023-03-26 21:35

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Chipset',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('chipset', models.CharField(max_length=30, verbose_name='Чипсет')),
            ],
            options={
                'verbose_name': 'Чипсет',
                'verbose_name_plural': 'Чипсеты',
            },
        ),
        migrations.CreateModel(
            name='Form_factor',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('form_factor', models.CharField(max_length=30, verbose_name='Форм-фактор')),
                ('height', models.CharField(max_length=10, verbose_name='Высота')),
                ('width', models.CharField(max_length=10, verbose_name='Ширина')),
            ],
            options={
                'verbose_name': 'Форм-фактор',
                'verbose_name_plural': 'Форм-факторы',
            },
        ),
        migrations.CreateModel(
            name='Memory_type_ram',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('memory_type_ram', models.CharField(max_length=30, verbose_name='Тип оперативной памяти')),
            ],
            options={
                'verbose_name': 'Тип оперативной памяти',
                'verbose_name_plural': 'Типы оперативной памяти',
            },
        ),
        migrations.CreateModel(
            name='Memory_type_video',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('memory_type_video', models.CharField(max_length=30, verbose_name='Тип видеопамяти')),
            ],
            options={
                'verbose_name': 'Тип видеопамяти',
                'verbose_name_plural': 'Типы видеопамяти',
            },
        ),
        migrations.CreateModel(
            name='Producer',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name_producer', models.CharField(max_length=50, verbose_name='Производитель')),
            ],
            options={
                'verbose_name': 'Производитель',
                'verbose_name_plural': 'Производители',
            },
        ),
        migrations.CreateModel(
            name='Socket',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name_socket', models.CharField(max_length=30, verbose_name='Сокет')),
            ],
            options={
                'verbose_name': 'Сокет',
                'verbose_name_plural': 'Сокеты',
            },
        ),
        migrations.CreateModel(
            name='Videocard',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name_videocard', models.CharField(max_length=100, verbose_name='Модель видеокарты')),
                ('capacity', models.SmallIntegerField(verbose_name='Объем памяти')),
                ('frequency', models.SmallIntegerField(verbose_name='Частота памяти')),
                ('length', models.SmallIntegerField(verbose_name='Длина видеокарты')),
                ('height', models.SmallIntegerField(verbose_name='Высота видеокарты')),
                ('width', models.SmallIntegerField(verbose_name='Ширина видеокарты')),
                ('weight', models.SmallIntegerField(verbose_name='Вес видеокарты')),
                ('other', models.CharField(max_length=300, null=True, verbose_name='Остальное описание')),
                ('Производитель', models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, to='kratos_app.producer')),
                ('Тип видеопамяти', models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, to='kratos_app.memory_type_video')),
            ],
            options={
                'verbose_name': 'Видеокарта',
                'verbose_name_plural': 'Видеокарты',
            },
        ),
        migrations.CreateModel(
            name='Ram',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name_ram', models.CharField(max_length=100, verbose_name='Модель оперативной памяти')),
                ('capacity', models.SmallIntegerField(verbose_name='Объем оперативной памяти')),
                ('frequency', models.SmallIntegerField(verbose_name='Частота оперативной памяти')),
                ('other', models.CharField(max_length=300, null=True, verbose_name='Остальное описание')),
                ('Производитель', models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, to='kratos_app.producer')),
                ('Тип оперативной памяти', models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, to='kratos_app.memory_type_ram')),
            ],
            options={
                'verbose_name': 'Оперативная память',
                'verbose_name_plural': 'Оперативная память',
            },
        ),
        migrations.CreateModel(
            name='Processor',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name_processor', models.CharField(max_length=100, verbose_name='Модель процессора')),
                ('description', models.CharField(max_length=300, verbose_name='Описание')),
                ('release_year', models.SmallIntegerField(verbose_name='Год релиза')),
                ('core', models.SmallIntegerField(verbose_name='Количество ядер')),
                ('thread', models.SmallIntegerField(verbose_name='Количество потоков')),
                ('frequency', models.SmallIntegerField(verbose_name='Частота процессора')),
                ('heat', models.CharField(max_length=5, verbose_name='Тепловыделение')),
                ('Графическое ядро', models.CharField(choices=[('Есть', 'Есть'), ('Нет', 'Нет')], max_length=5)),
                ('bus', models.CharField(max_length=30, verbose_name='Шина процессора')),
                ('other', models.CharField(max_length=300, null=True, verbose_name='Остальное описание')),
                ('Производитель', models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, to='kratos_app.producer')),
                ('Сокет', models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, to='kratos_app.socket')),
                ('Тип оперативной памяти', models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, to='kratos_app.memory_type_ram')),
            ],
            options={
                'verbose_name': 'Процессор',
                'verbose_name_plural': 'Процессоры',
            },
        ),
        migrations.CreateModel(
            name='Motherboard',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name_motherboard', models.CharField(max_length=50, verbose_name='Модель материнской платы')),
                ('description', models.CharField(max_length=300, verbose_name='Описание')),
                ('memory_slot', models.SmallIntegerField(verbose_name='Количество слотов для оперативной памяти')),
                ('bluetooth', models.CharField(choices=[('Есть', 'Есть'), ('Нет', 'Нет')], max_length=5)),
                ('other', models.CharField(max_length=300, null=True, verbose_name='Остальное описание')),
                ('Производитель', models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, to='kratos_app.producer')),
                ('Сокет', models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, to='kratos_app.socket')),
                ('Тип оперативной памяти', models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, to='kratos_app.memory_type_ram')),
                ('Форм-фактор', models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, to='kratos_app.form_factor')),
                ('Чипсет', models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, to='kratos_app.chipset')),
            ],
            options={
                'verbose_name': 'Материнская плата',
                'verbose_name_plural': 'Материнские платы',
            },
        ),
    ]
